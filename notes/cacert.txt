ARTIFACTORY: How to Resolve an “unable to find valid certification path to requested target” Error:
https://jfrog.com/knowledge-base/how-to-resolve-unable-to-find-valid-certification-path-to-requested-target-error/

sudo keytool -importcert -keystore /home/alex/.jdks/corretto-11.0.11/lib/security/cacerts -storepass changeit -file /home/alex/CERT/root.crt -alias "rhel-root"

Почему я получаю "No name matching found" CertificateException?
https://coderoad.ru/26792813/%D0%9F%D0%BE%D1%87%D0%B5%D0%BC%D1%83-%D1%8F-%D0%BF%D0%BE%D0%BB%D1%83%D1%87%D0%B0%D1%8E-No-name-matching-found-CertificateException


    @Test
    public void testSignIn() throws JSONException, JsonProcessingException {
        createTestUser(EMAIL_TEST, PASSWORD_TEST);

        ResponseEntity<String> result = restTemplate.exchange(URL_TEST, HttpMethod.POST, new HttpEntity<T>(createHeaders(EMAIL_TEST, PASSWORD_TEST)), String.class);


        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//        ObjectMapper objectMapper = new ObjectMapper();
//
//        restTemplate = new RestTemplate();
//        HttpHeaders headers = new HttpHeaders();
//        headers.setContentType(MediaType.APPLICATION_JSON);
//
//        JSONObject personJsonObject = new JSONObject();
//        personJsonObject.put("email", EMAIL_TEST);
//        personJsonObject.put("password", PASSWORD_TEST);
//
//        HttpEntity<String> request = new HttpEntity<String>(personJsonObject.toString(), headers);
//
//        String personResultAsJsonStr = restTemplate.postForObject(URL_TEST, request, String.class);
//
//        Logger.getLogger(this.getClass().getSimpleName()).info("Result: " + personResultAsJsonStr);
//        JsonNode root = objectMapper.readTree(personResultAsJsonStr);

//        assertNotNull(personResultAsJsonStr);


        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

//        String url = "https://localhost:8085/login";
//        String body = "{" +
//                "  \"email\": \"" + EMAIL_TEST + "\"," +
//                "  \"password\": \"" + PASSWORD_TEST + "\"" +
//                "}";
//        HttpHeaders headers = new HttpHeaders();
//
//        HttpEntity<String> entity = new HttpEntity<>(body, headers);

        // act
//        ResponseEntity<String> result = restTemplate.exchange(url, HttpMethod.POST, entity, String.class);
//
//        // verify
//        assertNull(result);
//        Assert.assertNotNull(result);
//        Assert.assertEquals(result.getStatusCodeValue(), 200);
//        String token = Objects.requireNonNull(result.getHeaders().get("Authorization")).get(0);
//        Assert.assertNotNull(token);

    }